THREE.STLLoader=function(){};THREE.STLLoader.prototype={constructor:THREE.STLLoader};THREE.STLLoader.prototype.load=function(url,callback){var scope=this;var xhr=new XMLHttpRequest();function onloaded(event){if(event.target.status===200||event.target.status===0){var geometry=scope.parse(event.target.response||event.target.responseText);scope.dispatchEvent({type:'load',content:geometry});if(callback)callback(geometry);}else{scope.dispatchEvent({type:'error',message:'Couldn\'t load URL ['+url+']',response:event.target.statusText});}}
xhr.addEventListener('load',onloaded,false);xhr.addEventListener('progress',function(event){scope.dispatchEvent({type:'progress',loaded:event.loaded,total:event.total});},false);xhr.addEventListener('error',function(){scope.dispatchEvent({type:'error',message:'Couldn\'t load URL ['+url+']'});},false);if(xhr.overrideMimeType)xhr.overrideMimeType('text/plain; charset=x-user-defined');xhr.open('GET',url,true);xhr.responseType='arraybuffer';xhr.send(null);};THREE.STLLoader.prototype.parse=function(data){var isBinary=function(){var expect,face_size,n_faces,reader;reader=new DataView(binData);face_size=(32/8*3)+((32/8*3)*3)+(16/8);n_faces=reader.getUint32(80,true);expect=80+(32/8)+(n_faces*face_size);return expect===reader.byteLength;};var binData=this.ensureBinary(data);return isBinary()?this.parseBinary(binData):this.parseASCII(this.ensureString(data));};THREE.STLLoader.prototype.parseBinary=function(data){var reader=new DataView(data);var faces=reader.getUint32(80,true);var r,g,b,hasColors=false,colors;var defaultR,defaultG,defaultB,alpha;for(var index=0;index<80-10;index++){if((reader.getUint32(index,false)==0x434F4C4F)&&(reader.getUint8(index+4)==0x52)&&(reader.getUint8(index+5)==0x3D)){hasColors=true;colors=new Float32Array(faces*3*3);defaultR=reader.getUint8(index+6)/255;defaultG=reader.getUint8(index+7)/255;defaultB=reader.getUint8(index+8)/255;alpha=reader.getUint8(index+9)/255;}}
var dataOffset=84;var faceLength=12*4+2;var offset=0;var geometry=new THREE.BufferGeometry();var vertices=new Float32Array(faces*3*3);var normals=new Float32Array(faces*3*3);for(var face=0;face<faces;face++){var start=dataOffset+face*faceLength;var normalX=reader.getFloat32(start,true);var normalY=reader.getFloat32(start+4,true);var normalZ=reader.getFloat32(start+8,true);if(hasColors){var packedColor=reader.getUint16(start+48,true);if((packedColor&0x8000)===0){r=(packedColor&0x1F)/31;g=((packedColor>>5)&0x1F)/31;b=((packedColor>>10)&0x1F)/31;}else{r=defaultR;g=defaultG;b=defaultB;}}
for(var i=1;i<=3;i++){var vertexstart=start+i*12;vertices[offset]=reader.getFloat32(vertexstart,true);vertices[offset+1]=reader.getFloat32(vertexstart+4,true);vertices[offset+2]=reader.getFloat32(vertexstart+8,true);normals[offset]=normalX;normals[offset+1]=normalY;normals[offset+2]=normalZ;if(hasColors){colors[offset]=r;colors[offset+1]=g;colors[offset+2]=b;}
offset+=3;}}
geometry.addAttribute('position',new THREE.BufferAttribute(vertices,3));geometry.addAttribute('normal',new THREE.BufferAttribute(normals,3));if(hasColors){geometry.addAttribute('color',new THREE.BufferAttribute(colors,3));geometry.hasColors=true;geometry.alpha=alpha;}
return geometry;};THREE.STLLoader.prototype.parseASCII=function(data){var geometry,length,normal,patternFace,patternNormal,patternVertex,result,text;geometry=new THREE.Geometry();patternFace=/facet([\s\S]*?)endfacet/g;while((result=patternFace.exec(data))!==null){text=result[0];patternNormal=/normal[\s]+([\-+]?[0-9]+\.?[0-9]*([eE][\-+]?[0-9]+)?)+[\s]+([\-+]?[0-9]*\.?[0-9]+([eE][\-+]?[0-9]+)?)+[\s]+([\-+]?[0-9]*\.?[0-9]+([eE][\-+]?[0-9]+)?)+/g;while((result=patternNormal.exec(text))!==null){normal=new THREE.Vector3(parseFloat(result[1]),parseFloat(result[3]),parseFloat(result[5]));}
patternVertex=/vertex[\s]+([\-+]?[0-9]+\.?[0-9]*([eE][\-+]?[0-9]+)?)+[\s]+([\-+]?[0-9]*\.?[0-9]+([eE][\-+]?[0-9]+)?)+[\s]+([\-+]?[0-9]*\.?[0-9]+([eE][\-+]?[0-9]+)?)+/g;while((result=patternVertex.exec(text))!==null){geometry.vertices.push(new THREE.Vector3(parseFloat(result[1]),parseFloat(result[3]),parseFloat(result[5])));}
length=geometry.vertices.length;geometry.faces.push(new THREE.Face3(length-3,length-2,length-1,normal));}
geometry.computeBoundingBox();geometry.computeBoundingSphere();return geometry;};THREE.STLLoader.prototype.ensureString=function(buf){if(typeof buf!=="string"){var array_buffer=new Uint8Array(buf);var str='';for(var i=0;i<buf.byteLength;i++){str+=String.fromCharCode(array_buffer[i]);}
return str;}else{return buf;}};THREE.STLLoader.prototype.ensureBinary=function(buf){if(typeof buf==="string"){var array_buffer=new Uint8Array(buf.length);for(var i=0;i<buf.length;i++){array_buffer[i]=buf.charCodeAt(i)&0xff;}
return array_buffer.buffer||array_buffer;}else{return buf;}};THREE.EventDispatcher.prototype.apply(THREE.STLLoader.prototype);if(typeof DataView==='undefined'){DataView=function(buffer,byteOffset,byteLength){this.buffer=buffer;this.byteOffset=byteOffset||0;this.byteLength=byteLength||buffer.byteLength||buffer.length;this._isString=typeof buffer==="string";}
DataView.prototype={_getCharCodes:function(buffer,start,length){start=start||0;length=length||buffer.length;var end=start+length;var codes=[];for(var i=start;i<end;i++){codes.push(buffer.charCodeAt(i)&0xff);}
return codes;},_getBytes:function(length,byteOffset,littleEndian){var result;if(littleEndian===undefined){littleEndian=this._littleEndian;}
if(byteOffset===undefined){byteOffset=this.byteOffset;}else{byteOffset=this.byteOffset+byteOffset;}
if(length===undefined){length=this.byteLength-byteOffset;}
if(typeof byteOffset!=='number'){throw new TypeError('DataView byteOffset is not a number');}
if(length<0||byteOffset+length>this.byteLength){throw new Error('DataView length or (byteOffset+length) value is out of bounds');}
if(this.isString){result=this._getCharCodes(this.buffer,byteOffset,byteOffset+length);}else{result=this.buffer.slice(byteOffset,byteOffset+length);}
if(!littleEndian&&length>1){if(!(result instanceof Array)){result=Array.prototype.slice.call(result);}
result.reverse();}
return result;},getFloat64:function(byteOffset,littleEndian){var b=this._getBytes(8,byteOffset,littleEndian),sign=1-(2*(b[7]>>7)),exponent=((((b[7]<<1)&0xff)<<3)|(b[6]>>4))-((1<<10)-1),mantissa=((b[6]&0x0f)*Math.pow(2,48))+(b[5]*Math.pow(2,40))+(b[4]*Math.pow(2,32))+
(b[3]*Math.pow(2,24))+(b[2]*Math.pow(2,16))+(b[1]*Math.pow(2,8))+b[0];if(exponent===1024){if(mantissa!==0){return NaN;}else{return sign*Infinity;}}
if(exponent===-1023){return sign*mantissa*Math.pow(2,-1022-52);}
return sign*(1+mantissa*Math.pow(2,-52))*Math.pow(2,exponent);},getFloat32:function(byteOffset,littleEndian){var b=this._getBytes(4,byteOffset,littleEndian),sign=1-(2*(b[3]>>7)),exponent=(((b[3]<<1)&0xff)|(b[2]>>7))-127,mantissa=((b[2]&0x7f)<<16)|(b[1]<<8)|b[0];if(exponent===128){if(mantissa!==0){return NaN;}else{return sign*Infinity;}}
if(exponent===-127){return sign*mantissa*Math.pow(2,-126-23);}
return sign*(1+mantissa*Math.pow(2,-23))*Math.pow(2,exponent);},getInt32:function(byteOffset,littleEndian){var b=this._getBytes(4,byteOffset,littleEndian);return(b[3]<<24)|(b[2]<<16)|(b[1]<<8)|b[0];},getUint32:function(byteOffset,littleEndian){return this.getInt32(byteOffset,littleEndian)>>>0;},getInt16:function(byteOffset,littleEndian){return(this.getUint16(byteOffset,littleEndian)<<16)>>16;},getUint16:function(byteOffset,littleEndian){var b=this._getBytes(2,byteOffset,littleEndian);return(b[1]<<8)|b[0];},getInt8:function(byteOffset){return(this.getUint8(byteOffset)<<24)>>24;},getUint8:function(byteOffset){return this._getBytes(1,byteOffset)[0];}};}
THREE.OrbitControls=function(object,domElement){this.object=object;this.domElement=(domElement!==undefined)?domElement:document;this.enabled=true;this.target=new THREE.Vector3();this.center=this.target;this.noZoom=false;this.zoomSpeed=1.0;this.minDistance=0;this.maxDistance=Infinity;this.noRotate=false;this.rotateSpeed=1.0;this.noPan=false;this.keyPanSpeed=7.0;this.autoRotate=false;this.autoRotateSpeed=2.0;this.minPolarAngle=0;this.maxPolarAngle=Math.PI;this.noKeys=false;this.keys={LEFT:37,UP:38,RIGHT:39,BOTTOM:40};var scope=this;var EPS=0.000001;var rotateStart=new THREE.Vector2();var rotateEnd=new THREE.Vector2();var rotateDelta=new THREE.Vector2();var panStart=new THREE.Vector2();var panEnd=new THREE.Vector2();var panDelta=new THREE.Vector2();var dollyStart=new THREE.Vector2();var dollyEnd=new THREE.Vector2();var dollyDelta=new THREE.Vector2();var phiDelta=0;var thetaDelta=0;var scale=1;var pan=new THREE.Vector3();var lastPosition=new THREE.Vector3();var STATE={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_DOLLY:4,TOUCH_PAN:5};var state=STATE.NONE;var changeEvent={type:'change'};this.rotateLeft=function(angle){if(angle===undefined){angle=getAutoRotationAngle();}
thetaDelta-=angle;};this.rotateUp=function(angle){if(angle===undefined){angle=getAutoRotationAngle();}
phiDelta-=angle;};this.panLeft=function(distance){var panOffset=new THREE.Vector3();var te=this.object.matrix.elements;panOffset.set(te[0],te[1],te[2]);panOffset.multiplyScalar(-distance);pan.add(panOffset);};this.panUp=function(distance){var panOffset=new THREE.Vector3();var te=this.object.matrix.elements;panOffset.set(te[4],te[5],te[6]);panOffset.multiplyScalar(distance);pan.add(panOffset);};this.pan=function(delta){var element=scope.domElement===document?scope.domElement.body:scope.domElement;if(scope.object.fov!==undefined){var position=scope.object.position;var offset=position.clone().sub(scope.target);var targetDistance=offset.length();targetDistance*=Math.tan((scope.object.fov/2)*Math.PI/180.0);scope.panLeft(2*delta.x*targetDistance/element.clientHeight);scope.panUp(2*delta.y*targetDistance/element.clientHeight);}else if(scope.object.top!==undefined){scope.panLeft(delta.x*(scope.object.right-scope.object.left)/element.clientWidth);scope.panUp(delta.y*(scope.object.top-scope.object.bottom)/element.clientHeight);}else{console.warn('WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.');}};this.dollyIn=function(dollyScale){if(dollyScale===undefined){dollyScale=getZoomScale();}
scale/=dollyScale;};this.dollyOut=function(dollyScale){if(dollyScale===undefined){dollyScale=getZoomScale();}
scale*=dollyScale;};this.update=function(){var position=this.object.position;var offset=position.clone().sub(this.target);var theta=Math.atan2(offset.x,offset.z);var phi=Math.atan2(Math.sqrt(offset.x*offset.x+offset.z*offset.z),offset.y);if(this.autoRotate){this.rotateLeft(getAutoRotationAngle());}
theta+=thetaDelta;phi+=phiDelta;phi=Math.max(this.minPolarAngle,Math.min(this.maxPolarAngle,phi));phi=Math.max(EPS,Math.min(Math.PI-EPS,phi));var radius=offset.length()*scale;radius=Math.max(this.minDistance,Math.min(this.maxDistance,radius));this.target.add(pan);offset.x=radius*Math.sin(phi)*Math.sin(theta);offset.y=radius*Math.cos(phi);offset.z=radius*Math.sin(phi)*Math.cos(theta);position.copy(this.target).add(offset);this.object.lookAt(this.target);thetaDelta=0;phiDelta=0;scale=1;pan.set(0,0,0);if(lastPosition.distanceTo(this.object.position)>0){this.dispatchEvent(changeEvent);lastPosition.copy(this.object.position);}};function getAutoRotationAngle(){return 2*Math.PI/60/60*scope.autoRotateSpeed;}
function getZoomScale(){return Math.pow(0.95,scope.zoomSpeed);}
function onMouseDown(event){if(scope.enabled===false){return;}
event.preventDefault();if(event.button===0){if(scope.noRotate===true){return;}
state=STATE.ROTATE;rotateStart.set(event.clientX,event.clientY);}else if(event.button===1){if(scope.noZoom===true){return;}
state=STATE.DOLLY;dollyStart.set(event.clientX,event.clientY);}else if(event.button===2){if(scope.noPan===true){return;}
state=STATE.PAN;panStart.set(event.clientX,event.clientY);}
scope.domElement.addEventListener('mousemove',onMouseMove,false);scope.domElement.addEventListener('mouseup',onMouseUp,false);}
function onMouseMove(event){if(scope.enabled===false)return;event.preventDefault();var element=scope.domElement===document?scope.domElement.body:scope.domElement;if(state===STATE.ROTATE){if(scope.noRotate===true)return;rotateEnd.set(event.clientX,event.clientY);rotateDelta.subVectors(rotateEnd,rotateStart);scope.rotateLeft(2*Math.PI*rotateDelta.x/element.clientWidth*scope.rotateSpeed);scope.rotateUp(2*Math.PI*rotateDelta.y/element.clientHeight*scope.rotateSpeed);rotateStart.copy(rotateEnd);}else if(state===STATE.DOLLY){if(scope.noZoom===true)return;dollyEnd.set(event.clientX,event.clientY);dollyDelta.subVectors(dollyEnd,dollyStart);if(dollyDelta.y>0){scope.dollyIn();}else{scope.dollyOut();}
dollyStart.copy(dollyEnd);}else if(state===STATE.PAN){if(scope.noPan===true)return;panEnd.set(event.clientX,event.clientY);panDelta.subVectors(panEnd,panStart);scope.pan(panDelta);panStart.copy(panEnd);}
scope.update();}
function onMouseUp(){if(scope.enabled===false)return;scope.domElement.removeEventListener('mousemove',onMouseMove,false);scope.domElement.removeEventListener('mouseup',onMouseUp,false);state=STATE.NONE;}
function onMouseWheel(event){if(scope.enabled===false||scope.noZoom===true)return;var delta=0;if(event.wheelDelta){delta=event.wheelDelta;}else if(event.detail){delta=-event.detail;}
if(delta>0){scope.dollyOut();}else{scope.dollyIn();}}
function onKeyDown(event){if(scope.enabled===false){return;}
if(scope.noKeys===true){return;}
if(scope.noPan===true){return;}
var needUpdate=false;switch(event.keyCode){case scope.keys.UP:scope.pan(new THREE.Vector2(0,scope.keyPanSpeed));needUpdate=true;break;case scope.keys.BOTTOM:scope.pan(new THREE.Vector2(0,-scope.keyPanSpeed));needUpdate=true;break;case scope.keys.LEFT:scope.pan(new THREE.Vector2(scope.keyPanSpeed,0));needUpdate=true;break;case scope.keys.RIGHT:scope.pan(new THREE.Vector2(-scope.keyPanSpeed,0));needUpdate=true;break;}
if(needUpdate){scope.update();}}
function touchstart(event){if(scope.enabled===false){return;}
switch(event.touches.length){case 1:if(scope.noRotate===true){return;}
state=STATE.TOUCH_ROTATE;rotateStart.set(event.touches[0].pageX,event.touches[0].pageY);break;case 2:if(scope.noZoom===true){return;}
state=STATE.TOUCH_DOLLY;var dx=event.touches[0].pageX-event.touches[1].pageX;var dy=event.touches[0].pageY-event.touches[1].pageY;var distance=Math.sqrt(dx*dx+dy*dy);dollyStart.set(0,distance);break;case 3:if(scope.noPan===true){return;}
state=STATE.TOUCH_PAN;panStart.set(event.touches[0].pageX,event.touches[0].pageY);break;default:state=STATE.NONE;}}
function touchmove(event){if(scope.enabled===false){return;}
event.preventDefault();event.stopPropagation();var element=scope.domElement===document?scope.domElement.body:scope.domElement;switch(event.touches.length){case 1:if(scope.noRotate===true){return;}
if(state!==STATE.TOUCH_ROTATE){return;}
rotateEnd.set(event.touches[0].pageX,event.touches[0].pageY);rotateDelta.subVectors(rotateEnd,rotateStart);scope.rotateLeft(2*Math.PI*rotateDelta.x/element.clientWidth*scope.rotateSpeed);scope.rotateUp(2*Math.PI*rotateDelta.y/element.clientHeight*scope.rotateSpeed);rotateStart.copy(rotateEnd);break;case 2:if(scope.noZoom===true){return;}
if(state!==STATE.TOUCH_DOLLY){return;}
var dx=event.touches[0].pageX-event.touches[1].pageX;var dy=event.touches[0].pageY-event.touches[1].pageY;var distance=Math.sqrt(dx*dx+dy*dy);dollyEnd.set(0,distance);dollyDelta.subVectors(dollyEnd,dollyStart);if(dollyDelta.y>0){scope.dollyOut();}else{scope.dollyIn();}
dollyStart.copy(dollyEnd);break;case 3:if(scope.noPan===true){return;}
if(state!==STATE.TOUCH_PAN){return;}
panEnd.set(event.touches[0].pageX,event.touches[0].pageY);panDelta.subVectors(panEnd,panStart);scope.pan(panDelta);panStart.copy(panEnd);break;default:state=STATE.NONE;}}
function touchend(){if(scope.enabled===false){return;}
state=STATE.NONE;}
this.domElement.addEventListener('contextmenu',function(event){event.preventDefault();},false);this.domElement.addEventListener('mousedown',onMouseDown,false);this.domElement.addEventListener('mousewheel',onMouseWheel,false);this.domElement.addEventListener('DOMMouseScroll',onMouseWheel,false);this.domElement.addEventListener('keydown',onKeyDown,false);this.domElement.addEventListener('touchstart',touchstart,false);this.domElement.addEventListener('touchend',touchend,false);this.domElement.addEventListener('touchmove',touchmove,false);};THREE.OrbitControls.prototype=Object.create(THREE.EventDispatcher.prototype);var particleLight;var _obj={scene:null,camera:null,renderer:null,container:null,controls:null,clock:null,stats:null,init:function(url,width,height,cont){this.scene=new THREE.Scene();var SCREEN_WIDTH=width,SCREEN_HEIGHT=height;var VIEW_ANGLE=15,ASPECT=SCREEN_WIDTH/SCREEN_HEIGHT,NEAR=1,FAR=10000;this.camera=new THREE.PerspectiveCamera(VIEW_ANGLE,ASPECT,NEAR,FAR);this.scene.add(this.camera);this.camera.position.set(-1000,1000,0);this.camera.lookAt(new THREE.Vector3(0,0,0));this.spotLight=new THREE.SpotLight(0xffffff,.3,0);this.spotLight.position.set(-700,1000,1000);this.spotLight.castShadow=false;this.scene.add(this.spotLight);this.pointLights=[];var pointLight=new THREE.PointLight(0xffffff,0.6,0);pointLight.position.set(-700,1000,100);this.scene.add(pointLight);this.pointLights.push(pointLight);pointLight=new THREE.PointLight(0xffffff,0.6,0);pointLight.position.set(200,-1000,0);this.scene.add(pointLight);this.pointLights.push(pointLight);pointLight=new THREE.PointLight(0xffffff,0.7,0);pointLight.position.set(3200,-3900,3500);this.scene.add(pointLight);this.pointLights.push(pointLight);pointLight=new THREE.PointLight(0xffffff,0.6,0);pointLight.position.set(0,0,-10000);this.scene.add(pointLight);this.pointLights.push(pointLight);this.renderer=new THREE.WebGLRenderer({antialias:true,alpha:false,preserveDrawingBuffer:true});this.renderer.setSize(SCREEN_WIDTH,SCREEN_HEIGHT);this.renderer.setClearColor(0xffffff);this.renderer.shadowMapEnabled=true;this.renderer.shadowMapSoft=true;document.getElementById(cont).appendChild(this.renderer.domElement);this.controls=new THREE.OrbitControls(this.camera,this.renderer.domElement);this.controls.target=new THREE.Vector3(0,0,0);this.clock=new THREE.Clock();var dLight=new THREE.DirectionalLight(0xffffff);dLight.position.set(1000,0,1);dLight.castShadow=true;dLight.shadowDarkness=0.2;dLight.shadowMapWidth=dLight.shadowMapHeight=1000;var _this=this;var material=new THREE.MeshPhongMaterial({color:0x0066CC,specular:0x0066CC,shading:THREE.SmoothShading,shininess:6,fog:false,side:THREE.DoubleSide});var loader=new THREE.STLLoader();loader.addEventListener('load',function(event){var geometry=event.content;var mesh=new THREE.Mesh(geometry,material);mesh.position.set(0,-0.37,-0.6);mesh.rotation.set(-Math.PI/2,0,0);mesh.scale.set(2,2,2);mesh.castShadow=true;mesh.receiveShadow=true;_this.scene.add(mesh);});loader.load(url);},};function animate(){requestAnimationFrame(animate);render();update();}
function update(){_obj.controls.update(_obj.clock.getDelta());var timer=Date.now()*0.000025;}
function render(){if(_obj.renderer){_obj.renderer.render(_obj.scene,_obj.camera);}}
function initializeObj(url,width,height,contId){_obj.init(url,width,height,contId);animate();$('canvas').hover(function(){$('body').css('overflow','hidden');},function(){$('body').css('overflow','auto');});}
var Uplist={};(function(){var toyLists=$('.designer-works-list-box'),toyListsBigPic=$('.designer-works-list-bigpic');})()
function showpic(index,src,url,name,describe){}
function showStlFileInRemoteServer(stlId,unpassed,canvasW,canvasH,containerId){$.post('/designer/show_3d',{'pic_id':stlId,'unpassed':unpassed},function(e){var url_path=JSON.parse(e).url_path;$('#'+containerId).html(null);initializeObj(url_path,canvasW,canvasH,containerId);$('#'+containerId+'-cont').show();$('#'+containerId+'-tool-fullscreen').unbind("click");$('#'+containerId+'-tool-fullscreen').on('click',function(){var win_height=$(window).height();var win_width=$(window).width();$('#'+containerId+'-fullscreen').empty();initializeObj(url_path,win_width,win_height,''+containerId+'-fullscreen');});$('#'+containerId+'-tool-cancel-fullscreen').unbind('click');$('#'+containerId+'-tool-cancel-fullscreen').click(function(){$('#'+containerId+'-fullscreen').empty();$('#'+containerId).html(null);initializeObj(url_path,canvasW,canvasH,containerId);$('#'+containerId+'-cont').show();});Uplist.endStlProgressBar('show-3d-bar-container','show-3d-bar');});}
Uplist.startStlProgressBar=function(containerId,barId,interval,lastTime,posTop,posLeft,width,height){$('#'+containerId).css('top',posTop);$('#'+containerId).css('left',posLeft);$('#'+containerId).show();var lasttime=0;Uplist.progressBarTimer=setInterval(function(){lasttime+=interval;var percentage=(lasttime/lastTime)*100;$('#'+barId).css('width',percentage+'%');if(lasttime>=lastTime){clearInterval(Uplist.progressBarTimer);}},interval);}
Uplist.endStlProgressBar=function(containerId,barId){clearInterval(Uplist.progressBarTimer);$('#'+containerId).hide();$('#'+barId).css('width','0%');}